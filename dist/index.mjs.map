{"version":3,"sources":["../src/utils.ts","../src/hook.ts","../src/plugin.ts"],"sourcesContent":["import {\n    RO_Sitemap,\n    RouteDefinitions,\n    RouteDefinition,\n    Sitemap,\n    UserAgentDirective,\n} from \"./types\";\nimport fs from \"fs\";\n\nexport const encodeXML = (str: string) => {\n    return str\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&apos;\");\n};\n\nexport const generateSitemap = <S extends RO_Sitemap>(\n    definitions: RouteDefinitions<S>,\n    baseUrl: string,\n    sitemap: S\n) => {\n    // Instantiate a routes object with all the static routes\n    // The will be override if you pass custom settings\n    const routes: Record<string, RouteDefinition<boolean>> = Object.keys(sitemap).reduce(\n        (acc, route) => {\n            const isDynamic = route.includes(\"[\");\n            if (!isDynamic) {\n                Object.assign(acc, {\n                    [route]: {\n                        path: route,\n                    } as RouteDefinition<boolean>,\n                });\n            }\n            return acc;\n        },\n        {}\n    );\n\n    // Add custom route data to the routes object\n    Object.entries(sitemap).forEach(([route]) => {\n        const RouteDefinition = definitions[route as keyof typeof definitions];\n        if (RouteDefinition) {\n            if (Array.isArray(RouteDefinition)) {\n                RouteDefinition.forEach((definition) => {\n                    Object.assign(routes, { [definition.path]: definition });\n                });\n            } else {\n                Object.assign(routes, { [RouteDefinition?.path || route]: RouteDefinition });\n            }\n        }\n    });\n\n    // Build and return sitemap\n    // refs : https://github.com/sveltejs/kit/issues/1142#issuecomment-1032407693 https://github.com/Shopify/hydrogen/blob/1de3864214d04d9214e323d7f0a953c7b9309b7b/templates/demo-store/src/routes/sitemap.xml.server.ts\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\"\nxmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\nxmlns:image=\"http://www.google.com/schemas/sitemap-image/1.1\"\nxmlns:video=\"http://www.google.com/schemas/sitemap-video/1.1\"\nxmlns:news=\"http://www.google.com/schemas/sitemap-news/0.9\"\nxmlns:mobile=\"http://www.google.com/schemas/sitemap-mobile/1.0\"\nxmlns:pagemap=\"http://www.google.com/schemas/sitemap-pagemap/1.0\"\nxmlns:xhtml=\"http://www.w3.org/1999/xhtml\">\n${Object.entries(routes)\n    .map(([r, { path, changeFreq, image, lastMod }]) => {\n        return `  <url>\n    <loc>${baseUrl}${path || r}</loc>\n  \n  ${lastMod ? `<lastmod>${lastMod}</lastmod>` : \"\"}\n  ${changeFreq ? `<changefreq>${changeFreq}</changefreq>` : \"\"}\n  ${\n      image\n          ? `\n    <image:image>\n      <image:loc>${encodeXML(image.url)}</image:loc>\n      <image:title>${encodeXML(image.title ?? \" \")}</image:title>\n      <image:caption>${encodeXML(image.altText ?? \" \")}</image:caption>\n    </image:image>`\n          : \"\"\n  }\n  </url>\n  `;\n    })\n    .join(\"\\n\")}\n</urlset>`;\n};\n\nexport const generateRobots = <S extends RO_Sitemap>(\n    robots: boolean | UserAgentDirective<S> | UserAgentDirective<S>[],\n    baseUrl: string\n) => {\n    // Instantiate the agents to render array\n    const agentsToRender: {\n        agent: string;\n        crawlDelay?: number;\n        allow: string[];\n        disallow: string[];\n    }[] = [];\n\n    const parseAgent = (agent: UserAgentDirective<S>) => {\n        const infos = Object.entries(agent.paths).reduce<{ allow: string[]; disallow: string[] }>(\n            (acc, [route, allow]) => {\n                if (allow) {\n                    acc.allow.push(route);\n                } else {\n                    acc.disallow.push(route);\n                }\n                return acc;\n            },\n            { allow: [], disallow: [] }\n        );\n\n        // Use the same config for all the user agents\n        if (Array.isArray(agent.userAgent)) {\n            agent.userAgent.forEach((a) => {\n                agentsToRender.push({\n                    agent: a,\n                    crawlDelay: agent.crawlDelay,\n                    ...infos,\n                });\n            });\n        } else {\n            agentsToRender.push({\n                agent: agent.userAgent || \"*\",\n                crawlDelay: agent.crawlDelay,\n                ...infos,\n            });\n        }\n    };\n\n    // Build a default robot.txt for all user-agents\n    if (typeof robots === \"boolean\") {\n        agentsToRender.push({\n            agent: \"*\",\n            allow: robots === true ? [\"/\"] : [],\n            disallow: robots === false ? [\"/\"] : [],\n        });\n    } else if (!Array.isArray(robots)) {\n        parseAgent(robots);\n    } else {\n        robots.forEach(parseAgent);\n    }\n\n    return `${agentsToRender\n        .map(({ agent, crawlDelay, allow, disallow }) =>\n            `User-agent: ${agent}\nSitemap: ${baseUrl}/sitemap.xml\n${crawlDelay ? `Crawl-delay: ${crawlDelay}` : \"\"}\n${allow.map((route) => `Allow: ${route}`).join(\"\\n\")}\n${disallow.map((route) => `Disallow: ${route}`).join(\"\\n\")}\n`\n                // Make it pretty\n                .replace(/\\n\\n/g, \"\\n\")\n                .replace(/\\n\\n/g, \"\\n\")\n        )\n        .join(\"\\n\")}\n`.trim();\n};\n\n// function to recursively traverse a directory and return if some of the files are named +page.svelte\nconst hasPageInside = (path: string): boolean => {\n    const files = fs.readdirSync(path);\n    if (files.some((file) => file === \"+page.svelte\")) return true;\n    return files.some((file: string) => {\n        const newPath = path + \"/\" + file;\n        if (fs.statSync(newPath).isDirectory()) {\n            return hasPageInside(newPath);\n        } else {\n            return false;\n        }\n    });\n};\n\nexport const getRoutes = (dir: string): Sitemap => {\n    let routes: Sitemap = {};\n    const traverseRoutes = (path: string) => {\n        const isDirectory = fs.statSync(path).isDirectory();\n        const isPageFolder = isDirectory && hasPageInside(path);\n        if (isDirectory && isPageFolder) {\n            fs.readdirSync(path).forEach((file) => traverseRoutes(path + \"/\" + file));\n        }\n\n        const id = path.replace(dir, \"\").replace(\"/+page.svelte\", \"\");\n\n        const dirBase = path.replace(\"/+page.svelte\", \"\");\n\n        const isFolder =\n            fs.statSync(dirBase).isDirectory() &&\n            fs.readdirSync(path.replace(\"/+page.svelte\", \"\")).some((p) => {\n                return fs.statSync(dirBase + \"/\" + p).isDirectory();\n            });\n        if (!path.endsWith(\"+page.svelte\") && !isFolder) return;\n\n        Object.assign(routes, { [id || \"/\"]: isFolder });\n    };\n    fs.readdirSync(dir).forEach((file) => traverseRoutes(dir + \"/\" + file));\n\n    return routes;\n};\n","import { type Handle } from \"@sveltejs/kit\";\nimport type { SitemapParams, RO_Sitemap } from \"./types\";\nimport { generateRobots, generateSitemap } from \"./utils\";\n\nexport const sitemapHook =\n    <S extends RO_Sitemap>(sitemap: S, params: SitemapParams<S> | undefined = {}): Handle =>\n    async ({ event, resolve }) => {\n        if (event.url.host.startsWith(\"www.\")) {\n            return new Response(null, {\n                status: 301,\n                headers: {\n                    location: event.url.href.replace(\"//www.\", \"//\"),\n                },\n            });\n        }\n\n        if (event.url.pathname === \"/sitemap.xml\") {\n            // Get dynamic custom definition for app routes\n            const routeDefinitions = params.getRoutes ? await params.getRoutes(event) : {};\n            return new Response(generateSitemap(routeDefinitions, event.url.origin, sitemap), {\n                status: 200,\n                headers: {\n                    \"Content-Type\": \"application/xml\",\n                },\n            });\n        }\n\n        if (event.url.pathname === \"/robots.txt\") {\n            // Get dynamic robots directives\n            const robots = params.getRobots ? await params.getRobots(event) : true;\n\n            // Build and return the robots.txt\n            return new Response(generateRobots<S>(robots, event.url.origin), {\n                headers: {\n                    \"content-type\": \"text/plain\",\n                    // Cache it for 24 hours\n                    \"cache-control\": `max-age=${60 * 60 * 24}`,\n                },\n            });\n        }\n\n        return resolve(event);\n    };\n","import fs from \"fs\";\nimport type { ViteDevServer } from \"vite\";\nimport { SitemapPluginParams } from \"./types\";\nimport { getRoutes } from \"./utils\";\n\nexport const sitemapPlugin = ({\n  routesDir = \"./src/routes\",\n  sitemapFile = \"./src/sitemap.ts\"\n}: SitemapPluginParams = {}) => {\n  function updateSitemap() {\n    fs.writeFileSync(\n      sitemapFile,\n      `import type { RO_Sitemap } from 'sveltekit-sitemap';\n\nexport const sitemap = (<const>${JSON.stringify(getRoutes(routesDir), null, 3).replace(\n        /\\uFFFF/g,\n        '\\\\\"'\n      )}) satisfies RO_Sitemap\n\nexport type Sitemap = typeof sitemap\n`\n    );\n  }\n  updateSitemap();\n\n  return {\n    name: \"sveltekit-sitemap\",\n    configureServer(server: ViteDevServer) {\n      server.watcher\n        .add([routesDir])\n        .on(\"add\", updateSitemap)\n        .on(\"unlink\", updateSitemap)\n        .on(\"unlinkDir\", updateSitemap);\n    }\n  };\n};\n"],"mappings":"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","names":["fs","encodeXML","str","generateSitemap","definitions","baseUrl","sitemap","routes","acc","route","RouteDefinition","definition","r","path","changeFreq","image","lastMod","_a","_b","generateRobots","robots","agentsToRender","parseAgent","agent","infos","allow","a","__spreadValues","crawlDelay","disallow","hasPageInside","files","fs","file","newPath","getRoutes","dir","traverseRoutes","isDirectory","isPageFolder","id","dirBase","isFolder","p","sitemapHook","sitemap","params","_0","__async","event","resolve","routeDefinitions","generateSitemap","robots","generateRobots","fs","sitemapPlugin","routesDir","sitemapFile","updateSitemap","fs","getRoutes","server"]}